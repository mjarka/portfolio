{"version":3,"sources":["theme.js","store.js","Hand.js","Smartphone.js","Tv.js","Animation.js","AnimationSection.js","Intro.js","Contact.js","HowIWork.js","FreeTime.js","LanguageChange.js","retailers.js","MyWorks.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","shape","borderRadius","palette","primary","main","background","default","typography","button","fontWeight","fontFamily","fontSize","h1","color","h3","lineHeight","body1","body2","join","responsiveFontSizes","pl","hello","intro","contactButton","howIWorkHeader","howIWork","myWorksHeader","myWorks","freeTimeHeader","freeTime","contactHeader","contact","auchan","biedronka","kaufland","maxima","rimi","spar","wiko","netto","en","useStore","create","set","get","index","isPl","strings","showTv","kv","changeLanguage","Hand","props","useTheme","matches","useMediaQuery","breakpoints","down","state","group","useRef","pen","useGLTF","nodes","materials","animations","useAnimations","actions","names","useFrame","t","clock","getElapsedTime","current","position","y","Math","sin","rotation","x","useEffect","setLoop","THREE","reset","fadeIn","play","clampWhenFinished","fadeOut","visible","opacity","useSpring","spikesOpacity","fiberColor","scale","config","wobbly","ref","dispose","object","Bone042","skinnedMesh","geometry","hand","material","Fiber","skeleton","hand_1","Skin","hand_2","Bone","hand_3","Blood","hand_4","meshStandardMaterial","transparent","hand_5","hand_6","silver","preload","Model","smartphone","useTexture","img","img2","testPattern","flipY","useState","tvTexture","setTvTexture","timer","setTimeout","clearTimeout","PI","castShadow","receiveShadow","Plane_1","Plane_2","roughness","map","Plane_3","Animation","camera","fov","intensity","fallback","ContactShadows","width","height","blur","far","AnimationSection","Box","className","Grid","item","xs","md","zIndex","Intro","px","display","alignItems","as","initialInView","onChange","inView","entry","setState","lg","order","Typography","variant","pt","Button","elevation","Contact","console","log","pb","threshold","HowIWork","FreeTime","LanguageChange","top","justifyContent","flexGrow","size","onClick","retailers","MyWorks","container","Object","keys","key","sm","pr","src","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42bbbfe.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nlet theme = createTheme({\r\n  shape: {\r\n    borderRadius: 18,\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#fea907\",\r\n    },\r\n    background: {\r\n      default: \"#565452\",\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      fontWeight: 500,\r\n      fontFamily: \"Barlow\",\r\n      fontSize: [13, \"!important\"],\r\n    },\r\n    h1: {\r\n      fontWeight: 700, // or 'bold'\r\n      fontSize: [70, \"!important\"],\r\n      color: \"#efebe5\",\r\n    },\r\n    h3: {\r\n      fontWeight: 700,\r\n      color: \"#efebe5\",\r\n      lineHeight: 1,\r\n    },\r\n    body1: {\r\n      fontWeight: 500,\r\n      color: \"#efebe5\",\r\n      fontSize: [25, \"!important\"],\r\n      lineHeight: 1.1,\r\n    },\r\n    body2: {\r\n      fontFamily: \"Barlow\",\r\n      fontWeight: 500,\r\n      color: \"#efebe5\",\r\n      fontSize: [13, \"!important\"],\r\n      lineHeight: 1,\r\n    },\r\n    fontFamily: [\r\n      \"Barlow Condensed\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n  },\r\n});\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;\r\n","import create from \"zustand\";\r\n\r\nconst pl = {\r\n  hello: \"Cześć!\",\r\n  intro:\r\n    \"Jestem Marcin grafik z Warszawy. Chętnie stworzę z Tobą coś wyjątkowego!\",\r\n  contactButton: \"kontakt\",\r\n  howIWorkHeader: \"Jak pracuję?\",\r\n  howIWork:\r\n    \"Chętnie przygotuję dla Ciebie kreację od A do Z. Od konceptu do przygotowania do druku. Mieszam rózne style i techniki dzięki czemu wyróżnisz się na tle konkurencji!\",\r\n  myWorksHeader: \"Moje prace\",\r\n  myWorks:\r\n    \"Współpracowałem nad kampaniami dla największych marek. Od pomysłu do wdrożenia. Prócz warsztatu graficznego mogę pomóc Ci w koncepcie Twojej marki.\",\r\n  freeTimeHeader: \"W wolnym czasie\",\r\n  freeTime:\r\n    \"Gram na gitarze, tworzę muzykę i uczę się robić takie strony jak ta. \",\r\n  contactHeader: \"Kontakt\",\r\n  contact:\r\n    \"Jeżeli masz pytania lub chcesz pogadać to napisz do mnie na marcinjarka@gmail.com lub zadzwoń\",\r\n  auchan:\r\n    \"bicycle rights. Yuccie pok pok gentrify ennui slow-carb wolf squid godard echo park waistcoat offal. Seitan drinking vinegar franzen forage actually c\",\r\n  biedronka:\r\n    \"ore they sold ou sothey sothey sold ou old ou old ou sold ou sold out, meditation slow-carb flexitari\",\r\n  kaufland:\r\n    \" +1 tumblr austin. 3 wolf moon put a bird on it trust fund stumptown authentic synth biodiesel ramps. Tattooed jean shorts iPhone hexagon, cred hell of seitan sartorial knausgaard flannel flexitarian. Chambra\",\r\n  maxima:\r\n    \"dard, chia squid yuccie. Sustainable fingerstache austin, bespoke next level chia butcher quinoa selfies chartreuse pop-up marfa etsy lomo. B\",\r\n  rimi: \"godard, cherstache austin, bespoke next level chia bia squid yuccie. Sustainable fingutcher quinoa selfies chartreuse pop-up marfa etsy lomo.\",\r\n  spar: \"uthentian shorts iPhone hexagon, cred hell of seitan sarc synth biodiesel ramps. Tattooed jetorial knausgaard flannel flexitarian. Chambray cr\",\r\n  wiko: \"J jianbing chicharrones kinfolk, cornhole +1. Tousled ornhole +1. Touornhole +1. Toufranzen intellig\",\r\n  netto:\r\n    \"Jade tilde vevel portland tattgan food truck man bun next level portland tattooed retro flezwoń\",\r\n};\r\n\r\nconst en = {\r\n  hello: \"Hi!\",\r\n  intro: \"My name is Marcin. I will kindly create something unique for you\",\r\n  contactButton: \"contact\",\r\n  howIWorkHeader: \"How I work?\",\r\n  howIWork:\r\n    \"I will be happy to prepare for you a creation from A to Z. From concept to print preparation. I mix different styles and techniques so that you stand out from the competition!\",\r\n  myWorksHeader: \"My works\",\r\n  myWorks:\r\n    \"I have worked on campaigns for major brands. From idea to implementation. Apart from graphic design workshop I can help you with the concept of your brand.\",\r\n  contactHeader: \"Contact\",\r\n  contact:\r\n    \"If you have questions or want to chat, email me at marcinjarka@gmail.com or call\",\r\n  freeTimeHeader: \"In my free time\",\r\n  freeTime:\r\n    \"I play guitar, make music, and learn to make websites like this one. \",\r\n  auchan:\r\n    \"godard, chia squid yuccie. Sustainable fingerstache austin, bespoke next level chia butcher quinoa selfies chartreuse pop-up marfa etsy lomo.\",\r\n  biedronka:\r\n    \"uthentic synth biodiesel ramps. Tattooed jean shorts iPhone hexagon, cred hell of seitan sartorial knausgaard flannel flexitarian. Chambray cr\",\r\n  kaufland:\r\n    \"J jianbing chicharrones kinfolk, cornhole +1. Tousled franzen intellig\",\r\n  maxima:\r\n    \"Jade tilde vegan food truck man bun next level portland tattooed retro flezwoń\",\r\n  rimi: \"godard, chia squid yuccie. Sustainable fingerstache austin, bespoke next level chia butcher quinoa selfies chartreuse pop-up marfa etsy lomo.\",\r\n  spar: \"uthentic synth biodiesel ramps. Tattooed jean shorts iPhone hexagon, cred hell of seitan sartorial knausgaard flannel flexitarian. Chambray cr\",\r\n  wiko: \"J jianbing chicharrones kinfolk, cornhole +1. Tousled franzen intellig\",\r\n  netto:\r\n    \"Jade tilde vegan food truck man bun next level portland tattooed retro flezwoń\",\r\n};\r\n\r\nconst useStore = create((set, get) => ({\r\n  // what 3d hand animation to display\r\n  index: 2,\r\n\r\n  // is polish language selected?\r\n  isPl: true,\r\n\r\n  // language for copy\r\n  strings: pl,\r\n\r\n  // bool for TV if it's shown or not\r\n  showTv: false,\r\n\r\n  // show current KV in portfolio section\r\n  kv: \"biedronka\",\r\n\r\n  //   increasePopulation: () => set((state) => ({ bears: state.bears + 1 })),\r\n  changeLanguage: () =>\r\n    get().isPl\r\n      ? set({ strings: en, isPl: false })\r\n      : set({ strings: pl, isPl: true }),\r\n}));\r\n\r\nexport default useStore;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport useStore from \"./store\";\r\nimport { useSpring, a, config } from \"@react-spring/three\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function Hand(props) {\r\n  // support for media queries\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import TV bool\r\n  const showTv = useStore((state) => state.showTv);\r\n\r\n  // import state storage\r\n  const index = useStore((state) => state.index);\r\n\r\n  // reference for model group\r\n  const group = useRef();\r\n  const pen = useRef();\r\n\r\n  // import animations\r\n  const { nodes, materials, animations } = useGLTF(\"HandSimplyfied.glb\");\r\n  const { actions, names } = useAnimations(animations, group);\r\n\r\n  // Lerp model between position and rotation\r\n  useFrame((state) => {\r\n    const t = state.clock.getElapsedTime();\r\n    group.current.position.y = (1 + Math.sin(t / 1.5)) / 15;\r\n    group.current.rotation.x = Math.sin(t / 2) / 8;\r\n    group.current.rotation.y = Math.sin(t / 3) / 5;\r\n  });\r\n\r\n  // Play animation once\r\n  useEffect(() => {\r\n    actions[names[index]].setLoop(THREE.LoopOnce, 1);\r\n    actions[names[index]].reset().fadeIn(0.3).play();\r\n    actions[names[index]].clampWhenFinished = true;\r\n    return () => actions[names[index]].fadeOut(0.3);\r\n  }, [index]);\r\n\r\n  // make pen invisible in shadow\r\n  useEffect(() => {\r\n    if (index === 1) {\r\n      pen.current.visible = true;\r\n    } else {\r\n      pen.current.visible = false;\r\n    }\r\n  }, [index]);\r\n\r\n  // make hand invisible if TV appears\r\n  useEffect(() => {\r\n    showTv ? (group.current.visible = false) : (group.current.visible = true);\r\n  }, [showTv]);\r\n\r\n  // lerp opacity for pen with spring\r\n  const { opacity } = useSpring({\r\n    opacity: index !== 1 ? 0 : 1,\r\n  });\r\n  const { spikesOpacity } = useSpring({\r\n    spikesOpacity: index === 6 ? 1 : 0,\r\n  });\r\n  const { fiberColor } = useSpring({\r\n    fiberColor: index === 6 ? \"#1f1f24\" : \"#e87404\",\r\n  });\r\n\r\n  // animate hand when TV dissapears\r\n  const { scale } = useSpring({\r\n    scale: showTv ? 0.6 : matches ? 1.1 : 1,\r\n    config: config.wobbly,\r\n  });\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <a.group\r\n        position={matches ? [-0.05, -3.2, 0.04] : [-0.05, -3.2, 0.04]}\r\n        scale={scale}\r\n      >\r\n        <primitive object={nodes.Bone042} />\r\n        <a.skinnedMesh\r\n          geometry={nodes.hand.geometry}\r\n          material={materials.Fiber}\r\n          material-color={fiberColor}\r\n          skeleton={nodes.hand.skeleton}\r\n        />\r\n        <skinnedMesh\r\n          geometry={nodes.hand_1.geometry}\r\n          material={materials.Skin}\r\n          skeleton={nodes.hand_1.skeleton}\r\n        />\r\n        <skinnedMesh\r\n          geometry={nodes.hand_2.geometry}\r\n          material={materials.Bone}\r\n          skeleton={nodes.hand_2.skeleton}\r\n        />\r\n        <skinnedMesh\r\n          geometry={nodes.hand_3.geometry}\r\n          material={materials.Blood}\r\n          skeleton={nodes.hand_3.skeleton}\r\n        />\r\n        <group ref={pen}>\r\n          <skinnedMesh\r\n            geometry={nodes.hand_4.geometry}\r\n            skeleton={nodes.hand_4.skeleton}\r\n          >\r\n            <a.meshStandardMaterial\r\n              color=\"#e89f00\"\r\n              opacity={opacity}\r\n              transparent={true}\r\n            />\r\n          </skinnedMesh>\r\n          <skinnedMesh\r\n            geometry={nodes.hand_5.geometry}\r\n            skeleton={nodes.hand_5.skeleton}\r\n          >\r\n            <a.meshStandardMaterial\r\n              color=\"#4a0716\"\r\n              opacity={opacity}\r\n              transparent={true}\r\n            />\r\n          </skinnedMesh>\r\n        </group>\r\n        <a.skinnedMesh\r\n          geometry={nodes.hand_6.geometry}\r\n          material={materials.silver}\r\n          material-transparent={true}\r\n          material-opacity={spikesOpacity}\r\n          skeleton={nodes.hand_6.skeleton}\r\n        />\r\n      </a.group>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"HandSimplyfied.glb\");\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useGLTF, useTexture } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useStore from \"./store\";\r\nimport { useSpring, animated, config } from \"@react-spring/three\";\r\n\r\nexport default function Model(props) {\r\n  const smartphone = useRef();\r\n  const { nodes, materials } = useGLTF(\"smartphone.glb\");\r\n\r\n  // change texture selection for tv screen\r\n  const [img, img2, testPattern] = useTexture([\r\n    \"tex.jpg\",\r\n    \"tex2.jpg\",\r\n    \"testPattern.jpg\",\r\n  ]);\r\n  img2.flipY = false;\r\n  img.flipY = false;\r\n  testPattern.flipY = false;\r\n\r\n  // import current KV selected from state management\r\n  const kv = useStore((state) => state.kv);\r\n\r\n  // Manage changing texture on tv screen\r\n  const [tvTexture, setTvTexture] = useState(img);\r\n\r\n  // support for media queries\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import TV bool to change animation on scroll\r\n  const showTv = useStore((state) => state.showTv);\r\n  const index = useStore((state) => state.index);\r\n\r\n  // hide Tv when hand appears\r\n  useEffect(() => {\r\n    showTv\r\n      ? (smartphone.current.visible = true)\r\n      : (smartphone.current.visible = false);\r\n  }, [showTv]);\r\n\r\n  // Lerp model between position and rotation\r\n  useFrame((state) => {\r\n    const t = state.clock.getElapsedTime();\r\n    smartphone.current.position.y = (1 + Math.sin(t / 1.5)) / 15;\r\n    // Tv.current.rotation.x = Math.sin(t / 2) / 12;\r\n    smartphone.current.rotation.y = Math.sin(t / 3) / 9;\r\n  });\r\n\r\n  // manage changing texture on tv screen\r\n  useEffect(() => {\r\n    setTvTexture(testPattern);\r\n    const timer = setTimeout(() => {\r\n      kv === \"biedronka\" ? setTvTexture(img2) : setTvTexture(img);\r\n    }, 200);\r\n    return () => clearTimeout(timer);\r\n  }, [kv]);\r\n\r\n  // define spring to change scale on scroll\r\n  const { scale, rotation } = useSpring({\r\n    scale: showTv ? (matches ? 3.1 : 2.6) : 0.4,\r\n    config: config.wobbly,\r\n    rotation:\r\n      kv === \"biedronka\"\r\n        ? [-Math.PI / 6, 0, 0]\r\n        : [-Math.PI / 7, 0, -Math.PI / 2],\r\n  });\r\n\r\n  return (\r\n    <animated.group\r\n      ref={smartphone}\r\n      {...props}\r\n      dispose={null}\r\n      scale={scale}\r\n      visible={false}\r\n    >\r\n      <animated.group rotation={rotation}>\r\n        <mesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Plane_1.geometry}\r\n          material={materials[\"Material.001\"]}\r\n        />\r\n        <mesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Plane_2.geometry}\r\n          material={materials[\"Material.002\"]}\r\n        >\r\n          <meshStandardMaterial roughness={0.3} map={tvTexture} />\r\n        </mesh>\r\n        <mesh\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.Plane_3.geometry}\r\n          material={materials[\"Material.003\"]}\r\n        />\r\n      </animated.group>\r\n    </animated.group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"smartphone.glb\");\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useGLTF, useTexture } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport useStore from \"./store\";\r\nimport { useSpring, animated, config } from \"@react-spring/three\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function Tv(props) {\r\n  const Tv = useRef();\r\n  const { nodes, materials } = useGLTF(\"tvsmall.glb\");\r\n\r\n  // change texture selection for tv screen\r\n  const [img, img2, testPattern] = useTexture([\r\n    \"tex.jpg\",\r\n    \"tex2.jpg\",\r\n    \"testPattern.jpg\",\r\n  ]);\r\n\r\n  // support for media queries\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import current KV selected from state management\r\n  const kv = useStore((state) => state.kv);\r\n\r\n  // Manage changing texture on tv screen\r\n  const [tvTexture, setTvTexture] = useState(img);\r\n\r\n  // import TV bool to change animation on scroll\r\n  const showTv = useStore((state) => state.showTv);\r\n  const index = useStore((state) => state.index);\r\n\r\n  // Lerp model between position and rotation\r\n  useFrame((state) => {\r\n    const t = state.clock.getElapsedTime();\r\n    Tv.current.position.y = (1 + Math.sin(t / 1.5)) / 15;\r\n    // Tv.current.rotation.x = Math.sin(t / 2) / 12;\r\n    Tv.current.rotation.y = Math.sin(t / 3) / 9;\r\n  });\r\n\r\n  img2.flipY = false;\r\n  img.flipY = false;\r\n  testPattern.flipY = false;\r\n\r\n  // hide Tv when hand appears\r\n  useEffect(() => {\r\n    showTv ? (Tv.current.visible = true) : (Tv.current.visible = false);\r\n  }, [showTv]);\r\n\r\n  // manage changing texture on tv screen\r\n  useEffect(() => {\r\n    setTvTexture(testPattern);\r\n    const timer = setTimeout(() => {\r\n      kv === \"biedronka\" ? setTvTexture(img2) : setTvTexture(img);\r\n    }, 200);\r\n    return () => clearTimeout(timer);\r\n  }, [kv]);\r\n\r\n  // define spring to change scale on scroll\r\n  const { scale } = useSpring({\r\n    scale: showTv ? (matches ? 1.0 : 0.9) : 0.4,\r\n    config: config.wobbly,\r\n  });\r\n\r\n  // const { scale } = useSpring({\r\n  //   to: { scale: 0.7 },\r\n  //   from: { scale: 0 },\r\n  //   reset: showTv,\r\n  // });\r\n\r\n  return (\r\n    <animated.group\r\n      ref={Tv}\r\n      {...props}\r\n      dispose={null}\r\n      scale={scale}\r\n      visible={false}\r\n    >\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cube_1.geometry}\r\n        material={nodes.Cube_1.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cube_2.geometry}\r\n        material={materials[\"Material.003\"]}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cube002_Curve.geometry}\r\n        material={materials[\"Material.004\"]}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cylinder.geometry}\r\n        material={nodes.Cylinder.material}\r\n      />\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.Cylinder003.geometry}\r\n        material={nodes.Cylinder003.material}\r\n      />\r\n      <mesh castShadow receiveShadow geometry={nodes.Cube004.geometry}>\r\n        <meshBasicMaterial reflectivity={0} roughness={0} map={tvTexture} />\r\n      </mesh>\r\n    </animated.group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"tvsmall.glb\");\r\n","import { ContactShadows } from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport React, { Suspense } from \"react\";\r\nimport Hand from \"./Hand\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Tv from \"./Tv\";\r\nimport Smartphone from \"./Smartphone\";\r\nfunction Animation() {\r\n  // support for media queries\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <Canvas camera={{ position: [-2, 2.3, 5], fov: 45 }}>\r\n      <directionalLight position={[8, 6, 3]} intensity={2} />\r\n      <directionalLight position={[-12, 1, 3]} intensity={1} />\r\n      <Suspense fallback={null}>\r\n        {/* <Tv /> */}\r\n        <Smartphone />\r\n        {/* <Rig> */}\r\n        <Hand scale={[0.2, 0.2, 0.2]} />\r\n        <ContactShadows\r\n          position={matches ? [0, -1.8, 0] : [0, -1.49, 0]}\r\n          width={5}\r\n          height={4}\r\n          opacity={0.2}\r\n          blur={2}\r\n          far={20}\r\n          rotation={[Math.PI / 2, 0, 0]}\r\n        />\r\n      </Suspense>\r\n\r\n      {/* <OrbitControls autoRotate /> */}\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default Animation;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Animation from \"./Animation\";\r\nfunction AnimationSection() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <Box\r\n      position=\"fixed\"\r\n      width=\"100vw\"\r\n      className={matches ? \"gradient\" : \"nic\"}\r\n    >\r\n      <Grid item xs={12} md={6}>\r\n        <Box height={matches ? \"60vh\" : \"100vh\"} zIndex=\"tooltip\">\r\n          <Animation />\r\n        </Box>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AnimationSection;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useStore from \"./store\";\r\nimport { InView } from \"react-intersection-observer\";\r\nfunction Intro() {\r\n  // import theme and breakpoints for scaling purposes\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import store with states to change language\r\n  const strings = useStore((state) => state.strings);\r\n\r\n  return (\r\n    <>\r\n      {/* Change flex or inline on breakpoints */}\r\n      <Box\r\n        px={4}\r\n        height=\"90vh\"\r\n        display=\"flex\"\r\n        alignItems={matches ? \"flex-start\" : \"center\"}\r\n      >\r\n        <InView\r\n          as=\"div\"\r\n          initialInView={true}\r\n          onChange={(inView, entry) => {\r\n            inView\r\n              ? useStore.setState({ index: 2 })\r\n              : useStore.setState({ index: 1 });\r\n            inView && useStore.setState({ showTv: false });\r\n          }}\r\n        >\r\n          <Grid item xs={8} lg={4} order={{ xs: 22, lg: 1 }}>\r\n            <Typography variant=\"h3\">{strings.hello}</Typography>\r\n            <Box pt={1}>\r\n              <Typography variant=\"body1\">{strings.intro}</Typography>\r\n            </Box>\r\n            <Box pt={2}>\r\n              <Button variant=\"contained\" color=\"primary\" elevation={0}>\r\n                {strings.contactButton}\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </InView>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useStore from \"./store\";\r\nimport InView from \"react-intersection-observer\";\r\nfunction Contact() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import text strings\r\n  const strings = useStore((state) => state.strings);\r\n  const index = useStore((state) => state.index);\r\n\r\n  // random number for rock, paper, scissors game\r\n  function getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n  }\r\n  console.log(index);\r\n  return (\r\n    <>\r\n      {/* Change flex or inline on breakpoints */}\r\n      <Box\r\n        px={4}\r\n        pt={3}\r\n        pb={4}\r\n        height={matches ? \"30vh\" : \"100vh\"}\r\n        display=\"flex\"\r\n        alignItems={matches ? \"flex-end\" : \"center\"}\r\n      >\r\n        <InView\r\n          as=\"div\"\r\n          threshold={0.5}\r\n          onChange={(inView, entry) => {\r\n            inView && useStore.setState({ index: 0 });\r\n          }}\r\n        >\r\n          <Grid item xs={8} lg={4} order={{ xs: 22, lg: 1 }}>\r\n            <Typography variant=\"h3\">{strings.contactHeader}</Typography>\r\n            <Box pt={2}>\r\n              <Typography variant=\"body1\">{strings.contact}</Typography>\r\n            </Box>\r\n            <Box pt={2}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                elevation={0}\r\n                // onClick={() => {\r\n                //   useStore.setState({ index: getRandomIntInclusive(3, 5) });\r\n                // }}\r\n              >\r\n                KONTAKT\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </InView>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useStore from \"./store\";\r\nimport InView from \"react-intersection-observer\";\r\n\r\nfunction HowIWork() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import store with states to change language\r\n  const strings = useStore((state) => state.strings);\r\n  return (\r\n    <>\r\n      {/* Change flex or inline on breakpoints */}\r\n      <Box\r\n        px={4}\r\n        height=\"90vh\"\r\n        display=\"flex\"\r\n        alignItems={matches ? \"flex-start\" : \"center\"}\r\n      >\r\n        <InView\r\n          as=\"div\"\r\n          threshold={0.7}\r\n          onChange={(inView, entry) => {\r\n            inView && useStore.setState({ index: 1 });\r\n            inView && useStore.setState({ showTv: false });\r\n          }}\r\n        >\r\n          <Grid item xs={8} lg={4} order={{ xs: 22, lg: 1 }}>\r\n            <Typography variant=\"h3\">{strings.howIWorkHeader}</Typography>\r\n            <Box pt={1}>\r\n              <Typography variant=\"body1\">{strings.howIWork}</Typography>\r\n            </Box>\r\n          </Grid>\r\n        </InView>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HowIWork;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useStore from \"./store\";\r\nimport InView from \"react-intersection-observer\";\r\nfunction FreeTime() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import text strings\r\n  const strings = useStore((state) => state.strings);\r\n  const index = useStore((state) => state.index);\r\n\r\n  return (\r\n    <>\r\n      {/* Change flex or inline on breakpoints */}\r\n      <Box\r\n        px={4}\r\n        height=\"90vh\"\r\n        display=\"flex\"\r\n        alignItems={matches ? \"flex-start\" : \"center\"}\r\n      >\r\n        <InView\r\n          as=\"div\"\r\n          threshold={0.5}\r\n          onChange={(inView, entry) => {\r\n            inView && useStore.setState({ index: 6 });\r\n          }}\r\n        >\r\n          <Grid item xs={8} lg={4} order={{ xs: 22, lg: 1 }}>\r\n            <Typography variant=\"h3\">{strings.freeTimeHeader}</Typography>\r\n            <Box pt={2}>\r\n              <Typography variant=\"body1\">{strings.freeTime}</Typography>\r\n            </Box>\r\n          </Grid>\r\n        </InView>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FreeTime;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport useStore from \"./store\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nfunction LanguageChange() {\r\n  // check for materialUi breakpoints\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import changeLanguage function from store\r\n  const changeLanguage = useStore((state) => state.changeLanguage);\r\n  const isPl = useStore((state) => state.isPl);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      position=\"sticky\"\r\n      top=\"0vh\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"solidBackground\"\r\n      px={matches ? 4 : 1}\r\n      zIndex=\"tooltip\"\r\n    >\r\n      {/* <Typography variant=\"body2\" onClick={changeLanguage}>\r\n        PL/EN\r\n      </Typography> */}\r\n      <Box flexGrow={1}>\r\n        <Typography variant=\"body2\">MARCINJARKA@GMAIL.COM</Typography>\r\n      </Box>\r\n      <Box>\r\n        <Button size=\"small\" onClick={changeLanguage} color=\"primary\">\r\n          {isPl ? \"English\" : \"Polski\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LanguageChange;\r\n","const retailers = {\r\n  auchan: \"icons/auchan.svg\",\r\n  biedronka: \"icons/biedronka.svg\",\r\n  kaufland: \"icons/kaufland.svg\",\r\n  maxima: \"icons/maxima.svg\",\r\n  rimi: \"icons/rimi.svg\",\r\n  spar: \"icons/spar.svg\",\r\n  wiko: \"icons/wiko.svg\",\r\n  netto: \"icons/netto.svg\",\r\n};\r\nexport default retailers;\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport retailers from \"./retailers\";\r\nimport useStore from \"./store\";\r\nimport InView from \"react-intersection-observer\";\r\n\r\nfunction MyWorks() {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // import current KV selected from state management\r\n  const kv = useStore((state) => state.kv);\r\n\r\n  // import store with states to change language\r\n  const strings = useStore((state) => state.strings);\r\n  return (\r\n    <>\r\n      {/* Change flex or inline on breakpoints */}\r\n      <Box\r\n        position=\"relative\"\r\n        px={4}\r\n        height=\"100vh\"\r\n        display=\"flex\"\r\n        alignItems={matches ? \"flex-start\" : \"center\"}\r\n      >\r\n        <InView\r\n          as=\"div\"\r\n          threshold={0.6}\r\n          onChange={(inView, entry) => {\r\n            inView && useStore.setState({ index: 1 });\r\n            inView\r\n              ? useStore.setState({ showTv: true })\r\n              : useStore.setState({ showTv: false });\r\n          }}\r\n        >\r\n          <Grid item xs={8} lg={4} order={{ xs: 22, lg: 1 }}>\r\n            <Typography variant=\"h3\">{strings.myWorksHeader}</Typography>\r\n            <Box pt={1} zIndex=\"tooltip\">\r\n              <Typography variant=\"body1\">{strings.myWorks}</Typography>\r\n\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                {/* Map through retailers to show their icon and set state onClick */}\r\n                {Object.keys(retailers).map(function (key) {\r\n                  return (\r\n                    <Grid\r\n                      key={key}\r\n                      item\r\n                      xs={3}\r\n                      sm={3}\r\n                      onClick={() => useStore.setState({ kv: key })}\r\n                    >\r\n                      <Box pr={2} pt={2}>\r\n                        <img\r\n                          src={retailers[key]}\r\n                          height=\"36px\"\r\n                          className=\"pointer\"\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n                <Box pt={2}>\r\n                  <Typography variant=\"body2\">{strings[kv]}</Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </InView>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyWorks;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport Box from \"@material-ui/core/Box\";\nimport AnimationSection from \"./AnimationSection\";\nimport Intro from \"./Intro\";\nimport { InView } from \"react-intersection-observer\";\nimport useStore from \"./store\";\nimport Contact from \"./Contact\";\nimport HowIWork from \"./HowIWork\";\nimport FreeTime from \"./FreeTime\";\nimport LanguageChange from \"./LanguageChange\";\nimport MyWorks from \"./MyWorks\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction App() {\n  // support for media queries\n\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  // import index from blobal state storage\n  const index = useStore((state) => state.index);\n  // check if TV should be visible\n  const showTv = useStore((state) => state.showTv);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <LanguageChange />\n      <Box>\n        <AnimationSection />\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            {/* TO ROBI ZA ZAŚLEPKĘ DO FIXED */}\n            <Box height=\"60vh\" zIndex=\"tooltip\"></Box>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Intro />\n\n            <HowIWork />\n\n            <MyWorks />\n            <FreeTime />\n            <Contact />\n          </Grid>\n        </Grid>\n        <div>test test</div>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}